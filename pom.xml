<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.waves</groupId>
  <artifactId>rising-waves</artifactId>
  <packaging>pom</packaging>
  <version>1.0.0.RELEASE</version>
  <modules>
    <module>rising-waves-dependencies</module>
    <module>rising-waves-framework</module>
    <module>rising-waves-admin</module>
    <module>rising-waves-security</module>
    <module>rising-waves-generator</module>
    <module>rising-waves-cms</module>
    <module>rising-waves-gateway</module>
  </modules>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.8.RELEASE</version>
  </parent>
  <name>rising-waves</name>
  <description>父pom</description>

  <licenses>
    <license>
      <name>Apache 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>zhukaiyuan</id>
      <name>zhukaiyuan</name>
      <email>zhuky9527@qq.com</email>
    </developer>
  </developers>

  <properties>

    <!-- Generic properties -->
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- build plugins dependencies -->
    <dockerfile.plugin.version>1.4.13</dockerfile.plugin.version>
    <spring-javaformat.version>0.0.22</spring-javaformat.version>


  </properties>

  <!-- 引入版本依赖 -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.waves</groupId>
        <artifactId>rising-waves-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
  <plugins>
  <plugin>
    <groupId>io.spring.javaformat</groupId>
    <artifactId>spring-javaformat-maven-plugin</artifactId>
    <version>${spring-javaformat.version}</version>
    <executions>
      <execution>
        <phase>validate</phase>
        <inherited>true</inherited>
        <goals>
          <goal>apply</goal>
        </goals>
      </execution>
    </executions>
  </plugin>
  </plugins>
  </build>


  <!-- 多环境管理 -->
  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <includes>
                <include>**/*Tests.java</include>
              </includes>
              <excludes>
                <exclude>**/Abstract*.java</exclude>
              </excludes>
              <systemPropertyVariables>
                <java.security.egd>file:/dev/./urandom</java.security.egd>
                <java.awt.headless>true</java.awt.headless>
              </systemPropertyVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-rules</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <bannedDependencies>
                      <excludes>
                        <exclude>commons-logging:*:*</exclude>
                      </excludes>
                      <searchTransitive>true</searchTransitive>
                    </bannedDependencies>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-install-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
            <inherited>true</inherited>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <!-- Spring Boot Actuator displays build-related information
                  if a META-INF/build-info.properties file is present -->
                <goals>
                  <goal>build-info</goal>
                </goals>
                <configuration>
                  <additionalProperties>
                    <encoding.source>${project.build.sourceEncoding}</encoding.source>
                    <encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
                    <java.source>${java.version}</java.source>
                    <java.target>${java.version}</java.target>
                  </additionalProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>

          <!-- Spotify Dockerfile Maven -->
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <version>${dockerfile.plugin.version}</version>
            <executions>
              <execution>
                <id>default</id>
                <goals>
                  <goal>build</goal>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <repository>spring2go/spring-petclinic</repository>
              <tag>${project.version}</tag>
              <!-- 注意在本地.m2/settings.xml中设置dockerhub账号和密码 -->
              <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
              <buildArgs>
                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>spring-milestone</id>
      <name>Spring Milestone</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-snapshot</id>
      <name>Spring Snapshot</name>
      <url>https://repo.spring.io/snapshot</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>


  <!-- 插件仓库 -->
  <pluginRepositories>
    <pluginRepository>
      <id>spring-milestone</id>
      <name>Spring Milestone</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>spring-snapshot</id>
      <name>Spring Snapshot</name>
      <url>https://repo.spring.io/snapshot</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
</project>
